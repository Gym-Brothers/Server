# Docker Compose for GYM Management System
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gym-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: gym_database
      POSTGRES_USER: gym_user
      POSTGRES_PASSWORD: gym_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - gym-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gym_user -d gym_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Application (Development)
  app-dev:
    build:
      context: .
      target: development
      dockerfile: Dockerfile
    container_name: gym-app-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: gym_user
      DB_PASSWORD: gym_password
      DB_NAME: gym_database
      DB_SYNCHRONIZE: "true"
      DB_LOGGING: "true"
      JWT_SECRET: "your-super-secret-jwt-key-change-in-production"
      JWT_EXPIRES_IN: "24h"
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gym-network
    profiles:
      - dev

  # NestJS Application (Production)
  app-prod:
    build:
      context: .
      target: production
      dockerfile: Dockerfile
    container_name: gym-app-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: gym_user
      DB_PASSWORD: gym_password
      DB_NAME: gym_database
      DB_SYNCHRONIZE: "false"
      DB_LOGGING: "false"
      JWT_SECRET: "your-super-secret-jwt-key-change-in-production"
      JWT_EXPIRES_IN: "24h"
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gym-network
    profiles:
      - prod

  # Redis (Optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: gym-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gym-network
    profiles:
      - redis

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gym-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gym.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - gym-network
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  gym-network:
    driver: bridge
